import java.util.Arrays;

public class Main {

    public static void main(String[] args) {

        int[] arr = generateRandomArray();      //генерируем массив для всех последующих задач
        //### Задание 1
        //Первым делом бухгалтеры попросили посчитать сумму всех выплат за месяц.
        //Нужно написать программу, которая решит эту задачу, и вывести в консоль результат
        //в формате: «Сумма трат за месяц составила … рублей».
        System.out.println("Задание 1");
        int summa = 0;      //инициализируем перменную куда записываем сумму
        for (int element : arr) {        //суммируем все элементы массива
            summa += element;
        }
        System.out.println("Сумма трат за месяц составила " + summa + " рублей");

        //### Задание 2
        //Следующая задача — найти минимальную и максимальную трату за день.
        //Нужно написать программу, которая решит эту задачу, и вывести в консоль результат
        //в формате: «Минимальная сумма трат за день составила … рублей. Максимальная сумма трат за день составила … рублей».
        System.out.println("Задание 2");
        int minDaySumma = arr[0];     //начальная минимальная сумма принимаем первое значение массива
        int maxDaySumma = arr[0];        //начальная максимальная сумма также первое значение массива
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > maxDaySumma) {
                maxDaySumma = arr[i];
            } else if (minDaySumma > arr[i]) {
                minDaySumma = arr[i];
            }
        }
        System.out.println("Минимальная сумма трат за день составила " + minDaySumma + " рублей");
        System.out.println("Максимальная сумма трат за день составила " + maxDaySumma + " рублей");

        //### Задание 3
        //А теперь нам нужно понять, какую в среднем сумму наша компания тратила в течение данных 30 дней.
        //Нужно написать программу, которая посчитает среднее значение трат за месяц (то есть сумму всех трат за месяц поделить на количество дней),
        // и вывести в консоль результат в формате: «Средняя сумма трат за месяц составила … рублей».
        //**Важно помнить:** подсчет среднего значения может иметь остаток (то есть быть не целым, а дробным числом).
        System.out.println("Задание 3");
        int daysToCount = arr.length;       //количество дней для расчёта средней суммы
        int avgSumma = (int) summa/daysToCount;      //переменная для среднего
        System.out.println("Средняя сумма трат за месяц составила " + avgSumma + " рублей");

        //### Задание 4
        //Отойдем от подсчетов.
        //В нашей бухгалтерской книге появился баг. Что-то пошло нет так, и Ф.И.О. сотрудников начали отображаться в обратную сторону. Т. е. вместо «Иванов Иван Иванович» мы имеем «чивонавИ навИ вонавИ».
        //Данные с именами сотрудников хранятся в виде массива символов (char[]).
        //Напишите код, который в случае такого бага будет выводить Ф. И. О. сотрудников в корректном виде. В качестве данных для массива используйте:
        //char[] reverseFullName = { 'n', 'a', 'v', 'I', ' ', 'v', 'o', 'n', 'a', 'v', 'I'};
        //В результате в консоль должно быть выведено "Ivanov Ivan".
        //**Важно**: не используйте дополнительные массивы для решения этой задачи.
        // Необходимо корректно пройти по массиву циклом и распечатать его элементы в правильном порядке.
        System.out.println("Задание 4");
        char[] reverseFullName = { 'n', 'a', 'v', 'I', ' ', 'v', 'o', 'n', 'a', 'v', 'I'};
        for (int i = reverseFullName.length-1; i > -1 ; i--) {      //перебираем массив с последнего до первого элемента
            System.out.print(reverseFullName[i]);
        }
        Task5();
        Task6();
        Task7();
        Task8_9();
    }

    public static int[] generateRandomArray() {
        java.util.Random random = new java.util.Random();
        int[] arr = new int[30];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = random.nextInt(100_000) + 100_000;
        }
        return arr;
    }
    //доп задачи из Slack
    public static void Task5() {
//Создайте матрицу 3х3 (двумерный массив типа int). Заполните единицами обе диагонали матрицы и напечатайте ее в консоль.
// Постарайтесь заполнить обе диагонали в одном цикле.
//Для печати следует использовать следующий код:
//for (int[] row : matrix) {
//	for (int column : row) {
//		System.out.print(column + " ");
//	}
//	System.out.println();
//}
        System.out.println("Задание 5");
        int[][] matrix = new int[3][3];     //инициализируем двумерный массив 3*3
        int numberForFillIn = 1;        //переменная, которой будем заполнять массив
        for (int i = 0; i < matrix.length; i++) {
            matrix[i][i] = numberForFillIn;       //заполняем ячейки по "прямой" диагонали
            matrix[i][matrix.length-1 - i] = numberForFillIn;   //заполняем ячейки по "обратной" диагонали (данный способ подходит для квадратных матриц)
        }
        for (int[] row : matrix) {
            for (int column : row) {
		    System.out.print(column + " ");
	}
	System.out.println();
        }
    }

    public static void Task6() {
//У нас есть массив, в котором содержатся целочисленные значения от 1 до 5.
//Наш коллега что-то напутал, в итоге массив читается не с начала, а с конца.
//Нам нужно исправить ошибку и переработать код так, чтобы массив читался в правильном порядке.
//Нам дан массив чисел: {5, 4, 3, 2, 1}
//Необходимо привести его к виду: {1, 2, 3, 4, 5}
//Решите задачу с использованием дополнительного массива.
//Напечатайте массив до преобразования и после с помощью
//System.out.println(Arrays.toString(arr));
        System.out.println("Задание 6");
        int[] backward = {5, 4, 3, 2, 1};
        int[] direct = new int[backward.length];        //создаём массив для записи значений в пярмом порядке с размерностью в зависимости от первого массива
        System.out.println(Arrays.toString(backward));      //печатаем массив до перобразований
        for (int i = 0; i < backward.length; i++) {
            direct[i] = backward[backward.length-1 - i];        //копируем в промежуточный массив значения последнее в первую ячейку итд
        }
        backward = Arrays.copyOf(direct, direct.length);
        System.out.println(Arrays.toString(backward));      //печатаем массив после перобразований
    }

    public static void Task7() {
//Решите предыдущее задание, но без использования дополнительного массива.
//Необходимо добиться того, чтобы исходный массив полностью соответствовал второму массиву из прошлого задания.
//Выведите результат программы в консоль тем же способом.
//Уточнения:
//Это задание не на сортировку.
//Не использовать Arrays.sort() и другие способы сортировок.
//Числа в порядке убывания даны исключительно для указания направления чтения.
//Массив может быть 5 8 2 3 9, нужно из него сделать 9 3 2 8 5.
        System.out.println("Задание 7");
        int[] backward = {5, 8, 2, 3, 9};
        System.out.println(Arrays.toString(backward));      //печатаем массив до перобразований
        for (int i = 0; i < backward.length; i++) {
            if (i >= (backward.length / 2)) {
                break;      //прекращаем цикл когда дошли до середины массива, чтобы обратно всё не переставить
            }
            int buffer = backward[i];       //переменная для временного хранения данных из массива
            backward[i] = backward[backward.length-1 - i];        //копируем последнее значение в первую ячейку итд
            backward[backward.length-1 - i] = buffer;       //заполняем ячейки начиная с последней значениями предварителоно сохранёнными в промежуточной переменной
        }
        System.out.println(Arrays.toString(backward));      //печатаем массив после перобразований
    }

    public static void Task8_9() {
        //8
        //Задача, которая используется/бывает/встречается на собеседованиях.
        //Дан массив чисел {−6, 2, 5, −8, 8, 10, 4, −7, 12, 1}
        //Необходимо найти два числа, сумма которых равна −2.
        //Напечатать эти числа в консоль.
        //Подсказка
        //Может потребоваться отсортировать массив с помощью Arrays.sort(arr).
        //9
        //Усложняем предыдущую задачу. Найдите все пары чисел, сумма которых равна −2. Напечатайте их в консоль.

        System.out.println("Задание 8_9");      //решил сразу 9ю, решение 8й закоментировал в коде
        int[] numArray = {-6, 2, 5, -8, 8, 10, 4, -7, 12, 1};       //массив предопределён условиями задачи
        int checkSumma = -2;        //результат проверки уловий задачи
        Arrays.sort(numArray);
        for (int i = 0; i < numArray.length; i++) {     //перебираем значения массива с 0 до конца
            // Задача 8. это условие для остановки чтобы получить только числа которые дают в сумме -2,
            // в ином случае мы выводим все варианты пар чисел сумма которых равно -2

            //if (numArray[i]>checkSumma) {
            //    break;      //останавливаемся когда закончатся подходящие числа
            //}

            for (int j = 0; j < numArray.length; j++) { //перебираем значения массива с 0 до конца внутри первого цикла
                if ((numArray[i] + numArray[j]) == -2) {        //проверяем условия поочередным сложением кадого числа с каждым, при сумме равной -2 выводим их на печать
                    System.out.println(numArray[i] + " + " + numArray[j] + " = " + checkSumma);
                    break;
                }
            }
        }
    }
}